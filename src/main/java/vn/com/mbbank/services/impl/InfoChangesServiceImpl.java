package vn.com.mbbank.services.impl;import com.google.common.collect.MapDifference;import vn.com.mbbank.core.config.I18n;import vn.com.mbbank.dto.InfoChangesDTO;import vn.com.mbbank.entities.HrInfoChangesEntity;import vn.com.mbbank.repositories.impl.LookupValuesRepositoryImpl;import vn.com.mbbank.repositories.jpa.HrInfoChangesRepositoryJPA;import vn.com.mbbank.services.InfoChangesService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import vn.com.mbbank.repositories.impl.InfoChangesRepositoryImpl;import vn.com.mbbank.utils.Constants;import vn.com.mbbank.utils.InfoChangeBean;import java.util.Map;/** * Autogen class: Lớp thao tác danh sach lich su tac dong theo nhan vien * * @author ToolGen * @date Sun Mar 20 22:23:55 ICT 2022 */@Servicepublic class InfoChangesServiceImpl implements InfoChangesService {    @Autowired    private InfoChangesRepositoryImpl infoChangesRepository;        @Autowired    private LookupValuesRepositoryImpl lookupValuesRepository;    @Autowired    private HrInfoChangesRepositoryJPA infoChangesRepositoryJPA;    @Override    public Object getInfoChanges(InfoChangesDTO dto) {        return infoChangesRepository.getInfoChanges(dto);    }    @Override    public void saveInfoChange(InfoChangeBean bean) {        Map<String, MapDifference.ValueDifference<Object>> mdiff = bean.getDifference();        StringBuilder dataBefore = new StringBuilder();        StringBuilder dataAfter = new StringBuilder();        if ("hrEmployee".equalsIgnoreCase(bean.getDataType())) {            addInfoChange(bean.getDataType(), "fullName", dataBefore, dataAfter, mdiff);            addInfoChange(bean.getDataType(), "dateOfBirth", dataBefore, dataAfter, mdiff);            addInfoChange(bean.getDataType(), "genderCode", dataBefore, dataAfter, mdiff, Constants.LOOKUP_CODES.GIOI_TINH);            addInfoChange(bean.getDataType(), "maritalStatusCode", dataBefore, dataAfter, mdiff, Constants.LOOKUP_CODES.TINH_TRANG_HON_NHAN);            addInfoChange(bean.getDataType(), "nationCode", dataBefore, dataAfter, mdiff, Constants.LOOKUP_CODES.QUOC_GIA);            addInfoChange(bean.getDataType(), "ethnicCode", dataBefore, dataAfter, mdiff, Constants.LOOKUP_CODES.DAN_TOC);            addInfoChange(bean.getDataType(), "religionCode", dataBefore, dataAfter, mdiff, Constants.LOOKUP_CODES.TON_GIAO);            addInfoChange(bean.getDataType(), "companyPhone", dataBefore, dataAfter, mdiff);            addInfoChange(bean.getDataType(), "mobileNumber", dataBefore, dataAfter, mdiff);            addInfoChange(bean.getDataType(), "personalEmail", dataBefore, dataAfter, mdiff);            addInfoChange(bean.getDataType(), "insuranceNo", dataBefore, dataAfter, mdiff);            addInfoChange(bean.getDataType(), "taxNo", dataBefore, dataAfter, mdiff);        }        if (!dataBefore.equals(dataAfter)) {            HrInfoChangesEntity entity = new HrInfoChangesEntity();            entity.setActionType("UPDATE");            entity.setDataType(bean.getDataType());            entity.setDataBefore(dataBefore.toString());            entity.setDataAfter(dataAfter.toString());            entity.setEmployeeId(bean.getEmployeeId());            entity.setCreatedBy(bean.getCreatedBy());            infoChangesRepositoryJPA.save(entity);        }        System.out.println(dataBefore);        System.out.println(dataAfter);    }    private void addInfoChange(String dataType, String attribute, StringBuilder dataBefore, StringBuilder dataAfter, Map<String, MapDifference.ValueDifference<Object>> mdiff,            String lookupCode) {        if (mdiff.get(attribute) != null) {            MapDifference.ValueDifference<Object> diff = mdiff.get(attribute);            dataBefore.append("\r\n").append(I18n.getMessage(dataType + "." + attribute)).append(": ").append(diff.leftValue() == null ? "" : lookupValuesRepository.getLookupValue(lookupCode, diff.leftValue().toString()).getLabel());            dataAfter.append("\r\n").append(I18n.getMessage(dataType + "." + attribute)).append(": ").append(diff.leftValue() == null ? "" : lookupValuesRepository.getLookupValue(lookupCode, diff.rightValue().toString()).getLabel());        }    }    private void addInfoChange(String dataType, String attribute, StringBuilder dataBefore, StringBuilder dataAfter, Map<String, MapDifference.ValueDifference<Object>> mdiff) {        if (mdiff.get(attribute) != null) {            MapDifference.ValueDifference<Object> diff = mdiff.get(attribute);            dataBefore.append("\r\n").append(I18n.getMessage(dataType + "." + attribute)).append(": ").append(diff.leftValue());            dataAfter.append("\r\n").append(I18n.getMessage(dataType + "." + attribute)).append(": ").append(diff.rightValue());        }    }}