package vn.com.mbbank.services.impl;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.stereotype.Service;import vn.com.mbbank.core.config.I18n;import vn.com.mbbank.core.dto.response.BaseResultSelect;import vn.com.mbbank.dto.EmployeesDTO;import vn.com.mbbank.dto.PersonalIDDTO;import vn.com.mbbank.dto.PersonalIdentitiesDTO;import vn.com.mbbank.entities.HrEmployeesEntity;import vn.com.mbbank.entities.HrPersonalIdentitiesEntity;import vn.com.mbbank.repositories.impl.PersonalIdentitiesRepositoryImpl;import vn.com.mbbank.repositories.jpa.HrEmployeesRepositoryJPA;import vn.com.mbbank.repositories.jpa.HrPersonalIdentitiesRepositoryJPA;import vn.com.mbbank.services.PersonalIdentitiesService;import vn.com.mbbank.utils.Constants;import vn.com.mbbank.utils.ErrorApp;import vn.com.mbbank.utils.ResponseUtils;import vn.com.mbbank.utils.Utils;import java.util.Date;import java.util.List;import java.util.Optional;/** * Autogen class: Lớp thao tác thong tin dinh danh cua nhan vien * * @author ToolGen * @date Sun Mar 20 21:50:21 ICT 2022 */@Servicepublic class PersonalIdentitiesServiceImpl implements PersonalIdentitiesService {    @Autowired    PersonalIdentitiesRepositoryImpl personalIdentitiesRepositoryImpl;    @Autowired    private HrPersonalIdentitiesRepositoryJPA personalIdentitiesRepositoryJPA;    @Autowired    private HrEmployeesRepositoryJPA employeeRepositoryJPA;    @Override    public Object getPersonalIdentities(Long id) {        List<PersonalIdentitiesDTO> dataResult = personalIdentitiesRepositoryImpl.getPersonalIdentities(id);        return dataResult;    }    @Override    public ResponseEntity<Object> saveData(PersonalIDDTO personalIDDTO, Long employeeId, Authentication authentication) throws Exception {        HrEmployeesEntity employeeEntity = personalIdentitiesRepositoryImpl.get(HrEmployeesEntity.class, employeeId);        if (personalIDDTO.getData() != null && !personalIDDTO.getData().isEmpty()) {            // validate tham so dau vao            int countIsMain = 0;            for (PersonalIdentitiesDTO personalIdentitiesDTO : personalIDDTO.getData()) {                if (personalIdentitiesDTO.getIsMain() != null && personalIdentitiesDTO.getIsMain().equals(1)) {                    countIsMain++;                    if (countIsMain > 1) {                        return ResponseUtils.getResponseEntity(ErrorApp.INVALID_PARAM.getCode(), I18n.getMessage("employee.validate.ID.isMain"));                    }                }            }            Date currentDate = new Date();            for (PersonalIdentitiesDTO personalIdentitiesDTO : personalIDDTO.getData()) {                HrPersonalIdentitiesEntity entity;                if (Utils.isNullObject(personalIdentitiesDTO.getPersonalIdentityId())) {                    entity = new HrPersonalIdentitiesEntity();                    entity.setCreateDate(new Date());                    entity.setCreatedBy(Utils.getUserNameLogin(authentication));                } else {                    entity = personalIdentitiesRepositoryJPA.getById(personalIdentitiesDTO.getPersonalIdentityId());                    entity.setLastUpdateDate(currentDate);                    entity.setLastUpdatedBy(Utils.getUserNameLogin(authentication));                }                personalIdentitiesDTO.setEmployeeId(employeeId);                Utils.copyProperties(entity, personalIdentitiesDTO);                if (entity.getIsMain() != null && entity.getIsMain().equals(1)) {                    employeeEntity.setPersonalIdTypeCode(entity.getIdTypeCode());                    employeeEntity.setPersonalId(entity.getIdNo());                    employeeEntity.setPersonalIdDate(entity.getIdIssueDate());                    employeeEntity.setPersonalIdPlace(entity.getIdIssuePlace());                    employeeRepositoryJPA.save(employeeEntity);                }                entity.setFlagStatus(Constants.STATUS.IS_ACTIVE);                personalIdentitiesRepositoryJPA.save(entity);            }        }        // thuc hien xoa ban ghi nguoi dung muon xoa        if (personalIDDTO.getIdDelete() != null && !personalIDDTO.getIdDelete().isEmpty()) {            for (Long id : personalIDDTO.getIdDelete()) {                Optional<HrPersonalIdentitiesEntity> optional = personalIdentitiesRepositoryJPA.findById(id);                if (optional.isPresent()) {                    HrPersonalIdentitiesEntity entityDelete = optional.get();                    entityDelete.setFlagStatus(Constants.STATUS.IS_NOT_ACTIVE);                    personalIdentitiesRepositoryJPA.save(entityDelete);                }            }        }        return ResponseUtils.getResponseSucessEntity(null);    }    @Override    public ResponseEntity<Object> searchIdentities(EmployeesDTO dto) {        BaseResultSelect result = personalIdentitiesRepositoryImpl.searchIdentities(dto);        return ResponseUtils.getResponseSucessEntity(result);    }}