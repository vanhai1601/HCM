/* * Copyright (C) 2022 HRPLUS. All rights reserved. * EcoIT. Use is subject to license terms. */package vn.com.mbbank.controllers;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.web.bind.annotation.*;import vn.com.mbbank.dto.DependentPersonsDTO;import vn.com.mbbank.dto.EmployeesDTO;import vn.com.mbbank.services.DependentPersonsService;import vn.com.mbbank.utils.Constants;import vn.com.mbbank.utils.ResponseUtils;import javax.validation.Valid;/** * Lop impl repository * * @author author * @since 1.0 * @version 1.0 */@RestController@RequestMapping(Constants.REQUEST_MAPPING_PREFIX)public class DependentPersonsController {    @Autowired    private DependentPersonsService dependentPersonsService;    @GetMapping(value = "/v1/dependent-persons/employees/{employeeId}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getListDataByEmpId(Authentication authentication,            @PathVariable Long employeeId,            DependentPersonsDTO dependentPersonsDTO    ) {        dependentPersonsDTO.setEmployeeId(employeeId);        Object resultObj = dependentPersonsService.getListDataByEmpId(dependentPersonsDTO, authentication);        return ResponseUtils.getResponseSucessEntity(resultObj);    }    @GetMapping(value = "/v1/dependent-persons/employees/{employeeId}/family-relationships", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getListFamilyRelationships(Authentication authentication,            @PathVariable Long employeeId    ) {        Object resultObj = dependentPersonsService.getListFamilyRelationshipsByEmpId(employeeId);        return ResponseUtils.getResponseSucessEntity(resultObj);    }    @PostMapping(value = "/v1/dependent-persons", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> saveData(Authentication authentication,            @Valid @RequestBody DependentPersonsDTO dependentPersonsDTO    ) throws Exception {        return dependentPersonsService.saveData(dependentPersonsDTO, authentication);    }    @DeleteMapping(value = "/v1/dependent-persons/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> deleteData(Authentication authentication,            @PathVariable Long id    ) throws Exception {        return dependentPersonsService.deleteData(id, authentication);    }    @GetMapping(value = "/v1/dependent-persons/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getDataById(Authentication authentication,            @PathVariable Long id    ) throws Exception {        DependentPersonsDTO dto = (DependentPersonsDTO) dependentPersonsService.getDataById(id, authentication);        return ResponseUtils.getResponseSucessEntity(dto);    }    @GetMapping(value = "/v1/dependent-persons", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> searchDependentPersons(Authentication authentication, EmployeesDTO employeesDTO) {        return dependentPersonsService.searchDependentPersons(employeesDTO);    }}