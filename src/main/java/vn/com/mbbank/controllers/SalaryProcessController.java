/* * Copyright (C) 2022 HRPLUS. All rights reserved. * EcoIT. Use is subject to license terms. */package vn.com.mbbank.controllers;import javax.validation.Valid;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.web.bind.annotation.DeleteMapping;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import vn.com.mbbank.dto.SalaryProcessDTO;import vn.com.mbbank.services.SalaryProcessService;import vn.com.mbbank.utils.Constants;import vn.com.mbbank.utils.ResponseUtils;/** * Lop controller * * @author author * @since 1.0 * @version 1.0 */@RestController@RequestMapping(Constants.REQUEST_MAPPING_PREFIX)public class SalaryProcessController {    @Autowired    private SalaryProcessService salaryProcessService;    @GetMapping(value = "/v1/salary-processes/employees/{employeeId}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getListDataByEmpId(Authentication authentication,            @PathVariable Long employeeId,            SalaryProcessDTO salaryProcessDTO    ) {        salaryProcessDTO.setEmployeeId(employeeId);        Object resultObj = salaryProcessService.getListDataByEmpId(salaryProcessDTO, authentication);        return ResponseUtils.getResponseSucessEntity(resultObj);    }    @PostMapping(value = "/v1/salary-processes", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> saveData(Authentication authentication,            @Valid @RequestBody SalaryProcessDTO salaryProcessDTO    ) throws Exception {        return salaryProcessService.saveData(salaryProcessDTO, authentication);    }    @DeleteMapping(value = "/v1/salary-processes/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> deleteData(Authentication authentication,            @PathVariable Long id    ) throws Exception {        return salaryProcessService.deleteData(id, authentication);    }    @GetMapping(value = "/v1/salary-processes/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getDataById(Authentication authentication,            @PathVariable Long id    ) throws Exception {        Object object = salaryProcessService.getDataById(id, authentication);        return ResponseUtils.getResponseSucessEntity(object);    }}