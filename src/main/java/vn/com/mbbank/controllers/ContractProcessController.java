/* * Copyright (C) 2022 HRPLUS. All rights reserved. * EcoIT. Use is subject to license terms. */package vn.com.mbbank.controllers;import java.util.List;import javax.validation.Valid;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.web.bind.annotation.DeleteMapping;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestPart;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.multipart.MultipartFile;import vn.com.mbbank.dto.ContractProcessDTO;import vn.com.mbbank.entities.HrContractProcessEntity;import vn.com.mbbank.services.ContractProcessService;import vn.com.mbbank.utils.Constants;import vn.com.mbbank.utils.ResponseUtils;import vn.com.mbbank.utils.Utils;/** * Lop impl repository * * @author author * @since 1.0 * @version 1.0 */@RestController@RequestMapping(Constants.REQUEST_MAPPING_PREFIX)public class ContractProcessController {    @Autowired    private ContractProcessService contractProcessService;    @GetMapping(value = "/v1/contract-processes/employees/{employeeId}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getListDataByEmpId(Authentication authentication,            @PathVariable Long employeeId,            ContractProcessDTO contractProcessDTO    ) {        contractProcessDTO.setEmployeeId(employeeId);        Object resultObj = contractProcessService.getListDataByEmpId(contractProcessDTO, authentication);        return ResponseUtils.getResponseSucessEntity(resultObj);    }    @PostMapping(value = "/v1/contract-processes", consumes = {MediaType.APPLICATION_JSON_VALUE, MediaType.MULTIPART_FORM_DATA_VALUE})    public ResponseEntity<Object> saveData(Authentication authentication,            @RequestPart(value = "files", required = false) List<MultipartFile> files,            @Valid @RequestPart(value = "data") ContractProcessDTO contractProcessDTO    ) throws Exception {        return contractProcessService.saveData(contractProcessDTO, authentication);    }    @DeleteMapping(value = "/v1/contract-processes/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> deleteData(Authentication authentication,            @PathVariable Long id    ) throws Exception {        return contractProcessService.deleteData(id, authentication);    }    @GetMapping(value = "/v1/contract-processes/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getDataById(Authentication authentication,            @PathVariable Long id    ) throws Exception {        HrContractProcessEntity entity = (HrContractProcessEntity) contractProcessService.getDataById(id, authentication);        if(entity == null) {            return ResponseUtils.getResponseSucessEntity(null);        }        ContractProcessDTO dto = new ContractProcessDTO();        Utils.copyProperties(dto, entity);        return ResponseUtils.getResponseSucessEntity(dto);    }}