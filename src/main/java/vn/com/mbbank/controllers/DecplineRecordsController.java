/* * Copyright (C) 2022 HRPLUS. All rights reserved. * EcoIT. Use is subject to license terms. */package vn.com.mbbank.controllers;import javax.servlet.http.HttpServletRequest;import javax.validation.Valid;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;import vn.com.mbbank.dto.DecplineRecordsDTO;import vn.com.mbbank.dto.EmployeesDTO;import vn.com.mbbank.entities.HrDecplineRecordsEntity;import vn.com.mbbank.services.DecplineRecordsService;import vn.com.mbbank.utils.Constants;import vn.com.mbbank.utils.ResponseUtils;import vn.com.mbbank.utils.Utils;/** * Lop impl repository * * @author author * @since 1.0 * @version 1.0 */@RestController@RequestMapping(Constants.REQUEST_MAPPING_PREFIX)public class DecplineRecordsController {    @Autowired    private DecplineRecordsService decplineRecordsService;    @GetMapping(value = "/v1/decpline-records/employees/{employeeId}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getListDataByEmpId(Authentication authentication,            @PathVariable Long employeeId,            DecplineRecordsDTO decplineRecordsDTO    ) {        decplineRecordsDTO.setEmployeeId(employeeId);        Object resultObj = decplineRecordsService.getListDataByEmpId(decplineRecordsDTO, authentication);        return ResponseUtils.getResponseSucessEntity(resultObj);    }    @PostMapping(value = "/v1/decpline-records", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> saveData(Authentication authentication,            @Valid @RequestBody DecplineRecordsDTO decplineRecordsDTO    ) throws Exception {        decplineRecordsService.saveData(decplineRecordsDTO, authentication);        return ResponseUtils.getResponseSucessEntity(null);    }    @DeleteMapping(value = "/v1/decpline-records/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> deleteData(Authentication authentication,            @PathVariable Long id    ) throws Exception {        return decplineRecordsService.deleteData(id, authentication);    }    @GetMapping(value = "/v1/decpline-records/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> getDataById(Authentication authentication,            @PathVariable Long id    ) throws Exception {        HrDecplineRecordsEntity entity = (HrDecplineRecordsEntity) decplineRecordsService.getDataById(id, authentication);        if (entity == null) {            return ResponseUtils.getResponseSucessEntity(null);        }        DecplineRecordsDTO dto = new DecplineRecordsDTO();        Utils.copyProperties(dto, entity);        return ResponseUtils.getResponseSucessEntity(dto);    }    @GetMapping(value = "/v1/decpline-records", produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> searchDecplineRecords(Authentication authentication,            EmployeesDTO dto) throws Exception {        return decplineRecordsService.searchDecplineRecords(dto, authentication);    }    @RequestMapping(value = "/v1/decpline-records/export-template-add", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> exportTemplateImportAddDecplineRecords(Authentication authentication) throws Exception {        return ResponseUtils.getResponseFileEntity(decplineRecordsService.exportTemplateImportAddDecplineRecords(authentication));    }    @RequestMapping(value = "/v1/decpline-records/import-add", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<Object> importAddDecplineRecords(Authentication authentication, HttpServletRequest req,                                                            @RequestPart(value = "file", required = true) MultipartFile file) throws Exception {        return decplineRecordsService.importAddDecplineRecords(file, authentication, req);    }}